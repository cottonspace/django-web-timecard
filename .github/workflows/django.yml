name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create dummy local_settings.py
      run: |
        echo "import os" > local_settings.py
        echo "from pathlib import Path" >> local_settings.py
        echo "DEBUG = True" >> local_settings.py
        echo "ALLOWED_HOSTS = ['*']" >> local_settings.py
        echo "SECRET_KEY = 'abcdef123456'" >> local_settings.py
        echo "BASE_DIR = Path(__file__).resolve().parent.parent" >> local_settings.py
        echo "DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': BASE_DIR / 'db.sqlite3', } }" >> local_settings.py
        echo "STATICFILES_DIRS = ( os.path.join(Path(__file__).resolve().parent.parent, 'static'), )" >> local_settings.py
        echo "SESSION_COOKIE_AGE = 3600" >> local_settings.py
        echo "CALENDAR_MONTHS = 12" >> local_settings.py
        echo "YEAR_FIRST_MONTH = 4" >> local_settings.py
        echo "ENABLE_CHECK_LOCATION = True" >> local_settings.py
        echo "ENABLE_RECORD_SOUND = True" >> local_settings.py
        echo "ENABLE_RECORD_VIBRATE = True" >> local_settings.py
        echo "LOCATION_ORIGIN = (0, 0)" >> local_settings.py
        echo "MAX_ACCURACY = 1000" >> local_settings.py
        echo "MAX_DISTANCE = 1000" >> local_settings.py
    - name: Migrate
      run: |
        python manage.py migrate
    - name: Create superuser
      run: |
        python manage.py createsuperuser
    - name: Load fixtures
      run: |
        python manage.py loaddata worktime/fixtures/standard-work-pattern.json
        python manage.py loaddata worktime/fixtures/time-off-pattern.json
    - name: Create calendar
      run: |
        python manage.py create_calendar
    - name: Run Tests
      run: |
        python manage.py test
